#include "Map3.h"



Map3::Map3(){
	_map[ 0 ] = {
		"         "
		"         "
		"         "
		"****B****"
		"BBBBBBBBB"
		"****BG***"
		"BBBBB*GG*"
		"****B****"
		"GGGABBBBB"
		"BBGGGBGGB"
		"GGBGBBGBG"
		"GBBGB*GGB"
		"GGBBBBGBB"
		"BGBGBGBGB"
		"**BBG*GA*"
		"BGGG*B*GB"
		"GG*BG*B*G"
		"B*B*GB*GB"
		"GGGGGGGGG"
		"**B*A*B*G"
		"**GGGGGGG"
		"BGBGBGGG*"
		"***GGG*G*"
		"A***GGGB*"
		"GGGGGGG*B"
		"******GBG"
		"BG**BGGAB"
		"GGBG**GBG"
		"BG*BGB**B"
		"GBGGGGBG*"
		"BG*BGG***"
		"GBBGAGGGG"
		"**B**GGGG"
		"GB**B***B"
		"GGGGB****"
		"BGBGGBABG"
		"GGGGBGGGB"
		"B**BGGBGB"
		"GBGBG**GB"
		"B*BGGGGGB"
		"GB**BGGGG"
		"GABG**BG*"
		"GGB**BGG*"
		"GGGBG*BGG"
		"BGGGBGG*G"
		"**G***B**"
		"BGB*B*GGG"
		"GB*GGB*B*"
		"BA**B**GB"
		"GGBGGGB**"
		"BGGB**BGG"
		"GGBGG**BG"
		"GBGGGGB**"
		"BGGBGBAGG"
		"GGG*B***B"
		"G*GBG**BB"
		"G*BGBBG**"
		"B*GBGGBBG"
		"G*BGGBGGB"
		"*A**BGGBG"
		"**GGG**BG"
		"GGGGBBG**"
		"GBB**GBB*"
		"G**GGG*GB"
		"GB***GBGB"
		"G*B*GG***"
		"BGGBGG*GB"
		"GB**BG***"
		"BG**GBGG*"
		"GB**GGBG*"
		"BG*GB*GGG"
		"*GGB*GG*G"
		"GBGGBGGGB"
		"BG*GGBGBG"
		"***BGGGGB"
		"AA*AAA*AA"
		"G*GBGG*G*"
		"GBGG*BGGG"
		"GGGBG**GG"
		"GBGGBGG**"
		"GGGBGG*GG"
		"BGG***BBG"
		"**GG*GGGG"
		"B**GGG*GB"
		"GB*GGB**G"
		"BGBGGGBGB"
		"GGGGGGGGG"
		"GGBGBGGBG"
		"BG*GG*BGG"
		"BGBGGGBGG"
		"GGGGBBG*B"
		"BBGBGGGB*"
		"GGBG***GG"
		"GGGBGGGGB"
		"BBB***BBB"
		"BGGBGGGBB"
		"GGBB**BBB"
		"BBBGGG***"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
	};
	_map[ 1 ] = {
		"         "
		"         "
		"         "
		"         "
		"         "
		"         "
		"GBGBGBGBG"
		"GGBG***GG"
		"GGGBGGGGB"
		"BBB***BBB"
		"BGGBGGGBB"
		"GB*GGB*B*"
		"BA**B**GB"
		"GGBGGGB**"
		"BGGB**BGG"
		"GGBGG**BG"
		"GBGGGGB**"
		"BGGBGBAGG"
		"GGG*B***B"
		"GGGGB**BB"
		"GBBBBGBB*"
		"***GBBBGG"
		"AA*AAA*AA"
		"G*GBGG*G*"
		"GBGG*BGGG"
		"GGGBG**GG"
		"GBGGBGG**"
		"****B****"
		"GGGABBBBB"
		"BBGGGBGGB"
		"GGBGBBGBG"
		"GBBGB*GGB"
		"**GBBGGBG"
		"BBB***BBB"
		"BGGBGGGBB"
		"GGBB**BBB"
		"GB*GGB*B*"
		"BA**B**GB"
		"GGBGGGB**"
		"GGBG**GBG"
		"BG*BGB**B"
		"GBGGGGBG*"
		"BGG***BBG"
		"**GG*GGGG"
		"B**GGG*GB"
		"BGGB**BGG"
		"GGBGG**BG"
		"GBGGGGB**"
		"BGGB*GBGG"
		"BG*BGG***"
		"GBBGAGGGG"
		"**B**GGGG"
		"GB**B***B"
		"B*B*GB*GB"
		"GGGGGGGGG"
		"**BBA*B*G"
		"**GG*GGGG"
		"B**GGG*GB"
		"GB*GGB**G"
		"BGBGGGBGB"
		"GGBGBGGBG"
		"BG*GG*BGG"
		"BGBGGGBGG"
		"GBGGGGB**"
		"BGGBGBAGG"
		"GGG*B***B"
		"G*GBG**BB"
		"G*BGBBG**"
		"B*GBGGBBG"
		"G*BGGBGGB"
		"*A**BGGBG"
		"**GGG**BG"
		"GGBGBBGBG"
		"GGGBGGGGB"
		"BBB***BBB"
		"BGGBGGGBB"
		"GGBB**BBB"
		"BBBGGG***"
		"GGGGGGG*B"
		"******GBG"
		"BGB*B*GGG"
		"GB*GGB*B*"
		"**BBG*GA*"
		"BGGG*B*GB"
		"**B**GGGG"
		"**GG*****"
		"GGGGGBBBB"
		"GBBBBG***"
		"*GGGGGBBB"
		"GGBBBBGBB"
		"BGBGBGBGB"
		"**BBG*GA*"
		"BGGG*B*GB"
		"GGBBBBGBB"
		"**GG*GGGG"
		"B**GGG*GB"
		"BB**GGGBB"
		"BBGGB****"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
	};
	_map[ 2 ] = {
		"         "
		"         "
		"         "
		"         "
		"         "
		"         "
		"GGGBBBBG*"
		"GGGBBBGGG"
		"BBBGGAAGG"
		"GABBGGBGB"
		"GGGBBBGGG"
		"GG***GGG*"
		"BBGG***GG"
		"***GGGBBB"
		"GB*GGB*B*"
		"**BBG*GA*"
		"BGGG*B*GB"
		"**GG*GGGG"
		"B**GGG*GB"
		"BGGB**BGG"
		"GGBGG**BG"
		"BBGGGBBG*"
		"GGGBB****"
		"***GGBBB*"
		"GGBGG**BG"
		"GBGGGGB**"
		"BGGBGBAGG"
		"GGG*B***B"
		"GGGGB**BB"
		"BBBGBBBBG"
		"GGBBBBGBB"
		"BBAGGGBG*"
		"**GG*****"
		"GGGGGBBBB"
		"GBBBBG***"
		"*AGGGABBB"
		"BBBGBBBB*"
		"GGG***GGG"
		"GGBBGBBBB"
		"**BBGB**G"
		"GGABBG***"
		"****GGBBB"
		"***GG***G"
		"GGBBBBBB*"
		"BB**A***G"
		"GGGGGBBBB"
		"BBBBBBGGG"
		"GGGBBGGGG"
		"**BBGB**G"
		"GGGBBG***"
		"****GGBBB"
		"GGBBBBGBB"
		"BBGBGGBBG"
		"BGGBGBAGG"
		"GGG*B***B"
		"G*GBG**BB"
		"G*BGBBG**"
		"BG*****GG"
		"**GBBGGBG"
		"BBB***BBB"
		"BGGBGGGBB"
		"GGBB**BBB"
		"GB*GGB*B*"
		"BA**B**GB"
		"GB***BBGB"
		"GB***GGGB"
		"GG***GBBG"
		"GB***GBAG"
		"GB***GGGB"
		"AGGGBGBBB"
		"GBBBB***G"
		"***GGGBBB"
		"*GGBBGGGG"
		"*GGGBBBBB"
		"*GGBBBGBG"
		"*GGBGGGBB"
		"GGGGBGGBB"
		"BBGGG**BG"
		"GG***GGGB"
		"***GGBB**"
		"GGGAGGBBG"
		"GGGBBBGG "
		"GBGGGG*BG"
		"GBG**BBBB"
		"GGG*GGGG*"
		"GG**BBBB*"
		"*BBBBBA*G"
		"*GGG*GG*B"
		"*BB**BBB*"
		"GG*BB**GG"
		"BBBA*GGG*"
		"G**BB***G"
		"*GG*GBBBG"
		"BBB*GAGGG"
		"GGG*GBBGB"
		"BBB*GGGG*"
		"AGGBBB*GG"
		"BBGGGABBG"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
		"LLLLLLLLL"
	};
}


Map3::~Map3( ) {
}

std::array< char, BLOCK_WIDTH_NUM * BLOCK_HEIGHT_NUM + 1 > Map3::getMap( int pattern ) {
	if ( pattern < 0 ) {
		pattern = 0;
	}
	if ( pattern >= MAX_PATTERN ){
		pattern = MAX_PATTERN - 1;
	}
	return _map[ pattern ];
}
